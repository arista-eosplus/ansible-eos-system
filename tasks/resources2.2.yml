# Perform the EOS System tasks under Ansible 2.2 or later
# using the Ansible eos_config module

- name: Arista EOS Hostname resources (Ansible >= 2.2)
  eos_config:
    src: hostname.j2
    defaults: true
    config: "{{ _eos_config | default(omit) }}"
    auth_pass: "{{ auth_pass | default(omit) }}"
    authorize: "{{ authorize | default(omit) }}"
    host: "{{ host | default(omit) }}"
    password: "{{ password | default(omit) }}"
    port: "{{ port | default(omit) }}"
    provider: "{{ provider | default(omit) }}"
    transport: "{{ transport | default(omit) }}"
    use_ssl: "{{ use_ssl | default(omit) }}"
    username: "{{ username | default(omit) }}"
  notify: save running config
  when: hostname is defined

- name: Arista EOS IP Routing resources (Ansible >= 2.2)
  eos_config:
    src: ip_routing.j2
    defaults: true
    config: "{{ _eos_config | default(omit) }}"
    auth_pass: "{{ auth_pass | default(omit) }}"
    authorize: "{{ authorize | default(omit) }}"
    host: "{{ host | default(omit) }}"
    password: "{{ password | default(omit) }}"
    port: "{{ port | default(omit) }}"
    provider: "{{ provider | default(omit) }}"
    transport: "{{ transport | default(omit) }}"
    use_ssl: "{{ use_ssl | default(omit) }}"
    username: "{{ username | default(omit) }}"
  notify: save running config
  when: eos_ip_routing_enabled is defined

- name: Arista EOS CLI User resources (Ansible >= 2.2)
  eos_config:
    src: users.j2
    defaults: true
    # Do not use the cached _eos_config for this template
    # because certain required information is sanitized
    # for security. We need to have the exact running-config.
    # config: "{{ _eos_config | default(omit) }}"
    auth_pass: "{{ auth_pass | default(omit) }}"
    authorize: "{{ authorize | default(omit) }}"
    host: "{{ host | default(omit) }}"
    password: "{{ password | default(omit) }}"
    port: "{{ port | default(omit) }}"
    provider: "{{ provider | default(omit) }}"
    transport: "{{ transport | default(omit) }}"
    use_ssl: "{{ use_ssl | default(omit) }}"
    username: "{{ username | default(omit) }}"
  # Block output from this step, to prevent unwanted
  # information from being exposed.
  no_log: true
  register: users_result
  notify: save running config
  when: item.name is defined
  with_items: "{{ eos_users | default([]) }}"

- block:
  # If the users task resulted in a change, we need to update
  # _eos_config, to make the updated config available to any
  # roles or tasks that may follow.
  - name: Gather EOS configuration
    eos_command:
      commands: "{{ gather_config_commands }}"
      provider: "{{ provider | default(omit) }}"
      auth_pass: "{{ auth_pass | default(omit) }}"
      authorize: "{{ authorize | default(omit) }}"
      host: "{{ host | default(omit) }}"
      password: "{{ password | default(omit) }}"
      port: "{{ port | default(omit) }}"
      transport: "{{ transport | default(omit) }}"
      use_ssl: "{{ use_ssl | default(omit) }}"
      username: "{{ username | default(omit) }}"
    register: output
    no_log: "{{ no_log | default(true) }}"

  - name: Save EOS configuration
    set_fact:
      _eos_config: "{{ output.stdout[0] }}"
    no_log: "{{ no_log | default(true) }}"

  when: users_result | changed
