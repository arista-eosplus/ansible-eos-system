- hosts: test_hosts
  gather_facts: no
  connection: local

  vars:
    module: ''

  tasks:
    # Call the eos_command module if module is set to eos_command
    - name: "{{ description | default('command playbook task') }}"
      eos_command:
        commands: "{{ cmds | default(omit) }}"
        auth_pass: "{{ auth_pass | default(omit) }}"
        authorize: "{{ authorize | default(omit) }}"
        host: "{{ host | default(omit) }}"
        password: "{{ password | default(omit) }}"
        port: "{{ port | default(omit) }}"
        provider: "{{ provider | default(omit) }}"
        transport: "cli"
        use_ssl: "{{ use_ssl | default(omit) }}"
        username: "{{ username | default(omit) }}"
      when: module == 'eos_command'

    # Call the eos_config module if module is set to eos_config
    - name: "{{ description | default('config playbook task') }}"
      eos_config:
        lines: "{{ lines | default(['']) }}"
        parents: "{{ parents | default(omit) }}"
        before: "{{ before | default(omit) }}"
        after: "{{ after | default(omit) }}"
        match: "{{ match | default('none')}}"
        auth_pass: "{{ auth_pass | default(omit) }}"
        authorize: "{{ authorize | default(omit) }}"
        host: "{{ host | default(omit) }}"
        password: "{{ password | default(omit) }}"
        port: "{{ port | default(omit) }}"
        provider: "{{ provider | default(omit) }}"
        transport: "cli"
        use_ssl: "{{ use_ssl | default(omit) }}"
        username: "{{ username | default(omit) }}"
      when: module == 'eos_config'

    # Call the eos_template module if module is set to eos_template
    - name: "{{ description | default('template playbook task') }}"
      eos_template:
        src: "{{ src | default(omit) }}"
        include_defaults: true
        auth_pass: "{{ auth_pass | default(omit) }}"
        authorize: "{{ authorize | default(omit) }}"
        host: "{{ host | default(omit) }}"
        password: "{{ password | default(omit) }}"
        port: "{{ port | default(omit) }}"
        provider: "{{ provider | default(omit) }}"
        transport: "cli"
        use_ssl: "{{ use_ssl | default(omit) }}"
        username: "{{ username | default(omit) }}"
      when: module == 'eos_template' and
            (ansible_version.major < 2 or
             (ansible_version.major == 2 and ansible_version.minor < 2))
